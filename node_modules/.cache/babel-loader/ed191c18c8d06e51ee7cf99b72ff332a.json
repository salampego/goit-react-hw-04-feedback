{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0433\\u0430\\u0439\\u043A\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react'; // import './App.css';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.goodIncrement = () => {\n      this.setState(stateGood => ({\n        good: stateGood.good + 1\n      }));\n    };\n\n    this.neutralIncrement = () => {\n      this.setState(statNeutral => ({\n        neutral: statNeutral.neutral + 1\n      }));\n    };\n\n    this.badIncrement = () => {\n      this.setState(stateBad => ({\n        bad: stateBad.bad + 1\n      }));\n    };\n  }\n\n  render() {\n    const state = this.state;\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please leave feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"button\",\n          onClick: this.goodIncrement,\n          children: \"Good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"button\",\n          onClick: this.neutralIncrement,\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          type: \"button\",\n          onClick: this.badIncrement,\n          children: \"Bad\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Statistic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-feedback\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Good \", state.good]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Neutral \", state.neutral]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Bad \", state.bad]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Total \", state.good + state.neutral + state.bad, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Positive feedback:\", ' ', total !== 0 ? Math.round(state.good / total * 100) : 0, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/гайк/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Feedback","state","good","neutral","bad","goodIncrement","setState","stateGood","neutralIncrement","statNeutral","badIncrement","stateBad","render","total","Math","round"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;;AAEA,OAAO,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCE,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAD8B;;AAAA,SAOtCC,aAPsC,GAOtB,MAAM;AACpB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BL,QAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,GAAiB;AADG,OAAL,CAAvB;AAGD,KAXqC;;AAAA,SAYtCM,gBAZsC,GAYnB,MAAM;AACvB,WAAKF,QAAL,CAAcG,WAAW,KAAK;AAC5BN,QAAAA,OAAO,EAAEM,WAAW,CAACN,OAAZ,GAAsB;AADH,OAAL,CAAzB;AAGD,KAhBqC;;AAAA,SAiBtCO,YAjBsC,GAiBvB,MAAM;AACnB,WAAKJ,QAAL,CAAcK,QAAQ,KAAK;AACzBP,QAAAA,GAAG,EAAEO,QAAQ,CAACP,GAAT,GAAe;AADK,OAAL,CAAtB;AAGD,KArBqC;AAAA;;AAuBtCQ,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMY,KAAK,GAAG,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAhE;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAsC,UAAA,OAAO,EAAE,KAAKC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAsC,UAAA,OAAO,EAAE,KAAKG,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF,eAQE;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,IAAI,EAAC,QAA7B;AAAsC,UAAA,OAAO,EAAE,KAAKE,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,eAAd;AAAA,kCACE;AAAA,gCAAUT,KAAK,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,mCAAaD,KAAK,CAACE,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,+BAASF,KAAK,CAACG,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,iCAAWH,KAAK,CAACC,IAAN,GAAaD,KAAK,CAACE,OAAnB,GAA6BF,KAAK,CAACG,GAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA,6CACqB,GADrB,EAEGS,KAAK,KAAK,CAAV,GAAcC,IAAI,CAACC,KAAL,CAAYd,KAAK,CAACC,IAAN,GAAaW,KAAd,GAAuB,GAAlC,CAAd,GAAuD,CAF1D;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAvDqC","sourcesContent":["import React, { Component } from 'react';\r\n// import './App.css';\r\n\r\nexport class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  goodIncrement = () => {\r\n    this.setState(stateGood => ({\r\n      good: stateGood.good + 1,\r\n    }));\r\n  };\r\n  neutralIncrement = () => {\r\n    this.setState(statNeutral => ({\r\n      neutral: statNeutral.neutral + 1,\r\n    }));\r\n  };\r\n  badIncrement = () => {\r\n    this.setState(stateBad => ({\r\n      bad: stateBad.bad + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const state = this.state;\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <p>Please leave feedback</p>\r\n          <button className=\"btn\" type=\"button\" onClick={this.goodIncrement}>\r\n            Good\r\n          </button>\r\n          <button className=\"btn\" type=\"button\" onClick={this.neutralIncrement}>\r\n            Neutral\r\n          </button>\r\n          <button className=\"btn\" type=\"button\" onClick={this.badIncrement}>\r\n            Bad\r\n          </button>\r\n        </div>\r\n        <div>\r\n          <p>Statistic</p>\r\n          <ul className=\"list-feedback\">\r\n            <li>Good {state.good}</li>\r\n            <li>Neutral {state.neutral}</li>\r\n            <li>Bad {state.bad}</li>\r\n            <li>Total {state.good + state.neutral + state.bad} </li>\r\n            <li>\r\n              Positive feedback:{' '}\r\n              {total !== 0 ? Math.round((state.good / total) * 100) : 0}%\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}