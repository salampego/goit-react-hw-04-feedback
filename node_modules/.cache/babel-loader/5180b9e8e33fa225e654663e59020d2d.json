{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0433\\u0430\\u0439\\u043A\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Statistics } from './Statistics/statistics';\nimport { Notification } from './Notification/notification';\nimport { Options } from './Options/options';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.handleClickBtn = event => {\n      const {\n        name\n      } = event.target;\n      this.setState(prevState => {\n        return {\n          [name]: prevState[name] + 1\n        };\n      });\n    };\n  }\n\n  render() {\n    const {\n      good,\n      neutral,\n      bad\n    } = this.state;\n    const total = good + neutral + bad;\n    const positivePercentage = Math.round(good / total * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please leave feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Options, {\n          onLeaveFeedback: this.handleClickBtn,\n          options: Object.keys(this.state)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n        message: 'Feedback no given'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n        good: good,\n        neutral: neutral,\n        bad: bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/гайк/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Statistics","Notification","Options","Feedback","state","good","neutral","bad","handleClickBtn","event","name","target","setState","prevState","render","total","positivePercentage","Math","round","Object","keys"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,OAAO,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCK,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAD8B;;AAAA,SAOtCC,cAPsC,GAOrBC,KAAK,IAAI;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,KAAK,CAACE,MAAvB;AACA,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAAE,WAACH,IAAD,GAAQG,SAAS,CAACH,IAAD,CAAT,GAAkB;AAA5B,SAAP;AACD,OAFD;AAGD,KAZqC;AAAA;;AActCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,IAAF;AAAQC,MAAAA,OAAR;AAAiBC,MAAAA;AAAjB,QAAyB,KAAKH,KAApC;AACA,UAAMW,KAAK,GAAGV,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AACA,UAAMS,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAYb,IAAI,GAAGU,KAAR,GAAiB,GAA5B,CAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AACE,UAAA,eAAe,EAAE,KAAKP,cADxB;AAEE,UAAA,OAAO,EAAEW,MAAM,CAACC,IAAP,CAAY,KAAKhB,KAAjB;AAFX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAQGW,KAAK,KAAK,CAAV,gBACC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,UAAD;AACE,QAAA,IAAI,EAAEV,IADR;AAEE,QAAA,OAAO,EAAEC,OAFX;AAGE,QAAA,GAAG,EAAEC,GAHP;AAIE,QAAA,KAAK,EAAEQ,KAJT;AAKE,QAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAxCqC","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Statistics } from './Statistics/statistics';\r\nimport { Notification } from './Notification/notification';\r\nimport { Options } from './Options/options';\r\n\r\nexport class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleClickBtn = event => {\r\n    const { name } = event.target;\r\n    this.setState(prevState => {\r\n      return { [name]: prevState[name] + 1 };\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    const positivePercentage = Math.round((good / total) * 100);\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <p>Please leave feedback</p>\r\n          <Options\r\n            onLeaveFeedback={this.handleClickBtn}\r\n            options={Object.keys(this.state)}\r\n          />\r\n        </div>\r\n        {total === 0 ? (\r\n          <Notification message={'Feedback no given'} />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}