{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0433\\u0430\\u0439\\u043A\\\\Documents\\\\GitHub\\\\goit-react-hw-02-feedback\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { Statistics } from './Statistics/statistics';\nimport { Notification } from './Notification/notification';\nimport { Options } from './Options/options';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0\n    };\n\n    this.goodIncrement = () => {\n      this.setState(stateGood => ({\n        good: stateGood.good + 1\n      }));\n    };\n\n    this.neutralIncrement = () => {\n      this.setState(statNeutral => ({\n        neutral: statNeutral.neutral + 1\n      }));\n    };\n\n    this.badIncrement = () => {\n      this.setState(stateBad => ({\n        bad: stateBad.bad + 1\n      }));\n    };\n  }\n\n  render() {\n    const state = this.state;\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    const positivePercentage = Math.round(state.good / total * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please leave feedback\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Options, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), total === 0 ? /*#__PURE__*/_jsxDEV(Notification, {\n        message: 'Feedback no given'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Statistics, {\n        good: state.good,\n        neutral: state.neutral,\n        bad: state.bad,\n        total: total,\n        positivePercentage: positivePercentage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/гайк/Documents/GitHub/goit-react-hw-02-feedback/src/components/App.jsx"],"names":["React","Component","Statistics","Notification","Options","Feedback","state","good","neutral","bad","goodIncrement","setState","stateGood","neutralIncrement","statNeutral","badIncrement","stateBad","render","total","positivePercentage","Math","round"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,OAAO,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCK,KADsC,GAC9B;AACNC,MAAAA,IAAI,EAAE,CADA;AAENC,MAAAA,OAAO,EAAE,CAFH;AAGNC,MAAAA,GAAG,EAAE;AAHC,KAD8B;;AAAA,SAOtCC,aAPsC,GAOtB,MAAM;AACpB,WAAKC,QAAL,CAAcC,SAAS,KAAK;AAC1BL,QAAAA,IAAI,EAAEK,SAAS,CAACL,IAAV,GAAiB;AADG,OAAL,CAAvB;AAGD,KAXqC;;AAAA,SAYtCM,gBAZsC,GAYnB,MAAM;AACvB,WAAKF,QAAL,CAAcG,WAAW,KAAK;AAC5BN,QAAAA,OAAO,EAAEM,WAAW,CAACN,OAAZ,GAAsB;AADH,OAAL,CAAzB;AAGD,KAhBqC;;AAAA,SAiBtCO,YAjBsC,GAiBvB,MAAM;AACnB,WAAKJ,QAAL,CAAcK,QAAQ,KAAK;AACzBP,QAAAA,GAAG,EAAEO,QAAQ,CAACP,GAAT,GAAe;AADK,OAAL,CAAtB;AAGD,KArBqC;AAAA;;AAuBtCQ,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKA,KAAnB;AACA,UAAMY,KAAK,GAAG,KAAKZ,KAAL,CAAWC,IAAX,GAAkB,KAAKD,KAAL,CAAWE,OAA7B,GAAuC,KAAKF,KAAL,CAAWG,GAAhE;AACA,UAAMU,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAYf,KAAK,CAACC,IAAN,GAAaW,KAAd,GAAuB,GAAlC,CAA3B;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAKGA,KAAK,KAAK,CAAV,gBACC,QAAC,YAAD;AAAc,QAAA,OAAO,EAAE;AAAvB;AAAA;AAAA;AAAA;AAAA,cADD,gBAGC,QAAC,UAAD;AACE,QAAA,IAAI,EAAEZ,KAAK,CAACC,IADd;AAEE,QAAA,OAAO,EAAED,KAAK,CAACE,OAFjB;AAGE,QAAA,GAAG,EAAEF,KAAK,CAACG,GAHb;AAIE,QAAA,KAAK,EAAES,KAJT;AAKE,QAAA,kBAAkB,EAAEC;AALtB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA9CqC","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { Statistics } from './Statistics/statistics';\r\nimport { Notification } from './Notification/notification';\r\nimport { Options } from './Options/options';\r\n\r\nexport class Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  goodIncrement = () => {\r\n    this.setState(stateGood => ({\r\n      good: stateGood.good + 1,\r\n    }));\r\n  };\r\n  neutralIncrement = () => {\r\n    this.setState(statNeutral => ({\r\n      neutral: statNeutral.neutral + 1,\r\n    }));\r\n  };\r\n  badIncrement = () => {\r\n    this.setState(stateBad => ({\r\n      bad: stateBad.bad + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const state = this.state;\r\n    const total = this.state.good + this.state.neutral + this.state.bad;\r\n    const positivePercentage = Math.round((state.good / total) * 100);\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <p>Please leave feedback</p>\r\n          <Options />\r\n        </div>\r\n        {total === 0 ? (\r\n          <Notification message={'Feedback no given'} />\r\n        ) : (\r\n          <Statistics\r\n            good={state.good}\r\n            neutral={state.neutral}\r\n            bad={state.bad}\r\n            total={total}\r\n            positivePercentage={positivePercentage}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}